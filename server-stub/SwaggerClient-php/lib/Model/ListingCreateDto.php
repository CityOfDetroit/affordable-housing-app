<?php
/**
 * ListingCreateDto
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Bloom API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.27-SNAPSHOT
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * ListingCreateDto Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ListingCreateDto implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ListingCreateDto';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'status' => '\Swagger\Client\Model\ListingStatus',
'display_waitlist_size' => 'bool',
'csv_formatting_type' => '\Swagger\Client\Model\CSVFormattingType',
'county_code' => '\Swagger\Client\Model\CountyCode',
'preferences' => '\Swagger\Client\Model\PreferenceCreateDto[]',
'property' => '\Swagger\Client\Model\IdDto',
'application_address' => 'AllOfListingCreateDtoApplicationAddress',
'application_pick_up_address' => 'AllOfListingCreateDtoApplicationPickUpAddress',
'leasing_agent_address' => 'AllOfListingCreateDtoLeasingAgentAddress',
'leasing_agents' => '\Swagger\Client\Model\IdDto[]',
'application_methods' => '\Swagger\Client\Model\ApplicationMethodDto[]',
'assets' => '\Swagger\Client\Model\AssetDto[]',
'events' => '\Swagger\Client\Model\ListingEventDto[]',
'application_due_date' => '\DateTime',
'application_open_date' => '\DateTime',
'application_fee' => 'string',
'application_organization' => 'string',
'application_pick_up_address_office_hours' => 'string',
'building_selection_criteria' => 'string',
'costs_not_included' => 'string',
'credit_history' => 'string',
'criminal_background' => 'string',
'deposit_min' => 'string',
'deposit_max' => 'string',
'disable_units_accordion' => 'bool',
'leasing_agent_email' => 'string',
'leasing_agent_name' => 'string',
'leasing_agent_office_hours' => 'string',
'leasing_agent_phone' => 'string',
'leasing_agent_title' => 'string',
'name' => 'string',
'postmarked_applications_received_by_date' => '\DateTime',
'program_rules' => 'string',
'rental_assistance' => 'string',
'rental_history' => 'string',
'required_documents' => 'string',
'special_notes' => 'string',
'waitlist_current_size' => 'float',
'waitlist_max_size' => 'float',
'what_to_expect' => 'AllOfListingCreateDtoWhatToExpect',
'application_config' => 'object'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'status' => null,
'display_waitlist_size' => null,
'csv_formatting_type' => null,
'county_code' => null,
'preferences' => null,
'property' => null,
'application_address' => null,
'application_pick_up_address' => null,
'leasing_agent_address' => null,
'leasing_agents' => null,
'application_methods' => null,
'assets' => null,
'events' => null,
'application_due_date' => 'date-time',
'application_open_date' => 'date-time',
'application_fee' => null,
'application_organization' => null,
'application_pick_up_address_office_hours' => null,
'building_selection_criteria' => null,
'costs_not_included' => null,
'credit_history' => null,
'criminal_background' => null,
'deposit_min' => null,
'deposit_max' => null,
'disable_units_accordion' => null,
'leasing_agent_email' => null,
'leasing_agent_name' => null,
'leasing_agent_office_hours' => null,
'leasing_agent_phone' => null,
'leasing_agent_title' => null,
'name' => null,
'postmarked_applications_received_by_date' => 'date-time',
'program_rules' => null,
'rental_assistance' => null,
'rental_history' => null,
'required_documents' => null,
'special_notes' => null,
'waitlist_current_size' => null,
'waitlist_max_size' => null,
'what_to_expect' => null,
'application_config' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'status' => 'status',
'display_waitlist_size' => 'displayWaitlistSize',
'csv_formatting_type' => 'CSVFormattingType',
'county_code' => 'countyCode',
'preferences' => 'preferences',
'property' => 'property',
'application_address' => 'applicationAddress',
'application_pick_up_address' => 'applicationPickUpAddress',
'leasing_agent_address' => 'leasingAgentAddress',
'leasing_agents' => 'leasingAgents',
'application_methods' => 'applicationMethods',
'assets' => 'assets',
'events' => 'events',
'application_due_date' => 'applicationDueDate',
'application_open_date' => 'applicationOpenDate',
'application_fee' => 'applicationFee',
'application_organization' => 'applicationOrganization',
'application_pick_up_address_office_hours' => 'applicationPickUpAddressOfficeHours',
'building_selection_criteria' => 'buildingSelectionCriteria',
'costs_not_included' => 'costsNotIncluded',
'credit_history' => 'creditHistory',
'criminal_background' => 'criminalBackground',
'deposit_min' => 'depositMin',
'deposit_max' => 'depositMax',
'disable_units_accordion' => 'disableUnitsAccordion',
'leasing_agent_email' => 'leasingAgentEmail',
'leasing_agent_name' => 'leasingAgentName',
'leasing_agent_office_hours' => 'leasingAgentOfficeHours',
'leasing_agent_phone' => 'leasingAgentPhone',
'leasing_agent_title' => 'leasingAgentTitle',
'name' => 'name',
'postmarked_applications_received_by_date' => 'postmarkedApplicationsReceivedByDate',
'program_rules' => 'programRules',
'rental_assistance' => 'rentalAssistance',
'rental_history' => 'rentalHistory',
'required_documents' => 'requiredDocuments',
'special_notes' => 'specialNotes',
'waitlist_current_size' => 'waitlistCurrentSize',
'waitlist_max_size' => 'waitlistMaxSize',
'what_to_expect' => 'whatToExpect',
'application_config' => 'applicationConfig'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'status' => 'setStatus',
'display_waitlist_size' => 'setDisplayWaitlistSize',
'csv_formatting_type' => 'setCsvFormattingType',
'county_code' => 'setCountyCode',
'preferences' => 'setPreferences',
'property' => 'setProperty',
'application_address' => 'setApplicationAddress',
'application_pick_up_address' => 'setApplicationPickUpAddress',
'leasing_agent_address' => 'setLeasingAgentAddress',
'leasing_agents' => 'setLeasingAgents',
'application_methods' => 'setApplicationMethods',
'assets' => 'setAssets',
'events' => 'setEvents',
'application_due_date' => 'setApplicationDueDate',
'application_open_date' => 'setApplicationOpenDate',
'application_fee' => 'setApplicationFee',
'application_organization' => 'setApplicationOrganization',
'application_pick_up_address_office_hours' => 'setApplicationPickUpAddressOfficeHours',
'building_selection_criteria' => 'setBuildingSelectionCriteria',
'costs_not_included' => 'setCostsNotIncluded',
'credit_history' => 'setCreditHistory',
'criminal_background' => 'setCriminalBackground',
'deposit_min' => 'setDepositMin',
'deposit_max' => 'setDepositMax',
'disable_units_accordion' => 'setDisableUnitsAccordion',
'leasing_agent_email' => 'setLeasingAgentEmail',
'leasing_agent_name' => 'setLeasingAgentName',
'leasing_agent_office_hours' => 'setLeasingAgentOfficeHours',
'leasing_agent_phone' => 'setLeasingAgentPhone',
'leasing_agent_title' => 'setLeasingAgentTitle',
'name' => 'setName',
'postmarked_applications_received_by_date' => 'setPostmarkedApplicationsReceivedByDate',
'program_rules' => 'setProgramRules',
'rental_assistance' => 'setRentalAssistance',
'rental_history' => 'setRentalHistory',
'required_documents' => 'setRequiredDocuments',
'special_notes' => 'setSpecialNotes',
'waitlist_current_size' => 'setWaitlistCurrentSize',
'waitlist_max_size' => 'setWaitlistMaxSize',
'what_to_expect' => 'setWhatToExpect',
'application_config' => 'setApplicationConfig'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'status' => 'getStatus',
'display_waitlist_size' => 'getDisplayWaitlistSize',
'csv_formatting_type' => 'getCsvFormattingType',
'county_code' => 'getCountyCode',
'preferences' => 'getPreferences',
'property' => 'getProperty',
'application_address' => 'getApplicationAddress',
'application_pick_up_address' => 'getApplicationPickUpAddress',
'leasing_agent_address' => 'getLeasingAgentAddress',
'leasing_agents' => 'getLeasingAgents',
'application_methods' => 'getApplicationMethods',
'assets' => 'getAssets',
'events' => 'getEvents',
'application_due_date' => 'getApplicationDueDate',
'application_open_date' => 'getApplicationOpenDate',
'application_fee' => 'getApplicationFee',
'application_organization' => 'getApplicationOrganization',
'application_pick_up_address_office_hours' => 'getApplicationPickUpAddressOfficeHours',
'building_selection_criteria' => 'getBuildingSelectionCriteria',
'costs_not_included' => 'getCostsNotIncluded',
'credit_history' => 'getCreditHistory',
'criminal_background' => 'getCriminalBackground',
'deposit_min' => 'getDepositMin',
'deposit_max' => 'getDepositMax',
'disable_units_accordion' => 'getDisableUnitsAccordion',
'leasing_agent_email' => 'getLeasingAgentEmail',
'leasing_agent_name' => 'getLeasingAgentName',
'leasing_agent_office_hours' => 'getLeasingAgentOfficeHours',
'leasing_agent_phone' => 'getLeasingAgentPhone',
'leasing_agent_title' => 'getLeasingAgentTitle',
'name' => 'getName',
'postmarked_applications_received_by_date' => 'getPostmarkedApplicationsReceivedByDate',
'program_rules' => 'getProgramRules',
'rental_assistance' => 'getRentalAssistance',
'rental_history' => 'getRentalHistory',
'required_documents' => 'getRequiredDocuments',
'special_notes' => 'getSpecialNotes',
'waitlist_current_size' => 'getWaitlistCurrentSize',
'waitlist_max_size' => 'getWaitlistMaxSize',
'what_to_expect' => 'getWhatToExpect',
'application_config' => 'getApplicationConfig'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['display_waitlist_size'] = isset($data['display_waitlist_size']) ? $data['display_waitlist_size'] : null;
        $this->container['csv_formatting_type'] = isset($data['csv_formatting_type']) ? $data['csv_formatting_type'] : null;
        $this->container['county_code'] = isset($data['county_code']) ? $data['county_code'] : null;
        $this->container['preferences'] = isset($data['preferences']) ? $data['preferences'] : null;
        $this->container['property'] = isset($data['property']) ? $data['property'] : null;
        $this->container['application_address'] = isset($data['application_address']) ? $data['application_address'] : null;
        $this->container['application_pick_up_address'] = isset($data['application_pick_up_address']) ? $data['application_pick_up_address'] : null;
        $this->container['leasing_agent_address'] = isset($data['leasing_agent_address']) ? $data['leasing_agent_address'] : null;
        $this->container['leasing_agents'] = isset($data['leasing_agents']) ? $data['leasing_agents'] : null;
        $this->container['application_methods'] = isset($data['application_methods']) ? $data['application_methods'] : null;
        $this->container['assets'] = isset($data['assets']) ? $data['assets'] : null;
        $this->container['events'] = isset($data['events']) ? $data['events'] : null;
        $this->container['application_due_date'] = isset($data['application_due_date']) ? $data['application_due_date'] : null;
        $this->container['application_open_date'] = isset($data['application_open_date']) ? $data['application_open_date'] : null;
        $this->container['application_fee'] = isset($data['application_fee']) ? $data['application_fee'] : null;
        $this->container['application_organization'] = isset($data['application_organization']) ? $data['application_organization'] : null;
        $this->container['application_pick_up_address_office_hours'] = isset($data['application_pick_up_address_office_hours']) ? $data['application_pick_up_address_office_hours'] : null;
        $this->container['building_selection_criteria'] = isset($data['building_selection_criteria']) ? $data['building_selection_criteria'] : null;
        $this->container['costs_not_included'] = isset($data['costs_not_included']) ? $data['costs_not_included'] : null;
        $this->container['credit_history'] = isset($data['credit_history']) ? $data['credit_history'] : null;
        $this->container['criminal_background'] = isset($data['criminal_background']) ? $data['criminal_background'] : null;
        $this->container['deposit_min'] = isset($data['deposit_min']) ? $data['deposit_min'] : null;
        $this->container['deposit_max'] = isset($data['deposit_max']) ? $data['deposit_max'] : null;
        $this->container['disable_units_accordion'] = isset($data['disable_units_accordion']) ? $data['disable_units_accordion'] : null;
        $this->container['leasing_agent_email'] = isset($data['leasing_agent_email']) ? $data['leasing_agent_email'] : null;
        $this->container['leasing_agent_name'] = isset($data['leasing_agent_name']) ? $data['leasing_agent_name'] : null;
        $this->container['leasing_agent_office_hours'] = isset($data['leasing_agent_office_hours']) ? $data['leasing_agent_office_hours'] : null;
        $this->container['leasing_agent_phone'] = isset($data['leasing_agent_phone']) ? $data['leasing_agent_phone'] : null;
        $this->container['leasing_agent_title'] = isset($data['leasing_agent_title']) ? $data['leasing_agent_title'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['postmarked_applications_received_by_date'] = isset($data['postmarked_applications_received_by_date']) ? $data['postmarked_applications_received_by_date'] : null;
        $this->container['program_rules'] = isset($data['program_rules']) ? $data['program_rules'] : null;
        $this->container['rental_assistance'] = isset($data['rental_assistance']) ? $data['rental_assistance'] : null;
        $this->container['rental_history'] = isset($data['rental_history']) ? $data['rental_history'] : null;
        $this->container['required_documents'] = isset($data['required_documents']) ? $data['required_documents'] : null;
        $this->container['special_notes'] = isset($data['special_notes']) ? $data['special_notes'] : null;
        $this->container['waitlist_current_size'] = isset($data['waitlist_current_size']) ? $data['waitlist_current_size'] : null;
        $this->container['waitlist_max_size'] = isset($data['waitlist_max_size']) ? $data['waitlist_max_size'] : null;
        $this->container['what_to_expect'] = isset($data['what_to_expect']) ? $data['what_to_expect'] : null;
        $this->container['application_config'] = isset($data['application_config']) ? $data['application_config'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        if ($this->container['display_waitlist_size'] === null) {
            $invalidProperties[] = "'display_waitlist_size' can't be null";
        }
        if ($this->container['csv_formatting_type'] === null) {
            $invalidProperties[] = "'csv_formatting_type' can't be null";
        }
        if ($this->container['county_code'] === null) {
            $invalidProperties[] = "'county_code' can't be null";
        }
        if ($this->container['preferences'] === null) {
            $invalidProperties[] = "'preferences' can't be null";
        }
        if ($this->container['property'] === null) {
            $invalidProperties[] = "'property' can't be null";
        }
        if ($this->container['application_address'] === null) {
            $invalidProperties[] = "'application_address' can't be null";
        }
        if ($this->container['application_pick_up_address'] === null) {
            $invalidProperties[] = "'application_pick_up_address' can't be null";
        }
        if ($this->container['leasing_agent_address'] === null) {
            $invalidProperties[] = "'leasing_agent_address' can't be null";
        }
        if ($this->container['application_methods'] === null) {
            $invalidProperties[] = "'application_methods' can't be null";
        }
        if ($this->container['assets'] === null) {
            $invalidProperties[] = "'assets' can't be null";
        }
        if ($this->container['events'] === null) {
            $invalidProperties[] = "'events' can't be null";
        }
        if ($this->container['application_due_date'] === null) {
            $invalidProperties[] = "'application_due_date' can't be null";
        }
        if ($this->container['application_open_date'] === null) {
            $invalidProperties[] = "'application_open_date' can't be null";
        }
        if ($this->container['application_fee'] === null) {
            $invalidProperties[] = "'application_fee' can't be null";
        }
        if ($this->container['application_organization'] === null) {
            $invalidProperties[] = "'application_organization' can't be null";
        }
        if ($this->container['application_pick_up_address_office_hours'] === null) {
            $invalidProperties[] = "'application_pick_up_address_office_hours' can't be null";
        }
        if ($this->container['building_selection_criteria'] === null) {
            $invalidProperties[] = "'building_selection_criteria' can't be null";
        }
        if ($this->container['costs_not_included'] === null) {
            $invalidProperties[] = "'costs_not_included' can't be null";
        }
        if ($this->container['credit_history'] === null) {
            $invalidProperties[] = "'credit_history' can't be null";
        }
        if ($this->container['criminal_background'] === null) {
            $invalidProperties[] = "'criminal_background' can't be null";
        }
        if ($this->container['deposit_min'] === null) {
            $invalidProperties[] = "'deposit_min' can't be null";
        }
        if ($this->container['deposit_max'] === null) {
            $invalidProperties[] = "'deposit_max' can't be null";
        }
        if ($this->container['disable_units_accordion'] === null) {
            $invalidProperties[] = "'disable_units_accordion' can't be null";
        }
        if ($this->container['leasing_agent_email'] === null) {
            $invalidProperties[] = "'leasing_agent_email' can't be null";
        }
        if ($this->container['leasing_agent_name'] === null) {
            $invalidProperties[] = "'leasing_agent_name' can't be null";
        }
        if ($this->container['leasing_agent_office_hours'] === null) {
            $invalidProperties[] = "'leasing_agent_office_hours' can't be null";
        }
        if ($this->container['leasing_agent_phone'] === null) {
            $invalidProperties[] = "'leasing_agent_phone' can't be null";
        }
        if ($this->container['leasing_agent_title'] === null) {
            $invalidProperties[] = "'leasing_agent_title' can't be null";
        }
        if ($this->container['name'] === null) {
            $invalidProperties[] = "'name' can't be null";
        }
        if ($this->container['postmarked_applications_received_by_date'] === null) {
            $invalidProperties[] = "'postmarked_applications_received_by_date' can't be null";
        }
        if ($this->container['program_rules'] === null) {
            $invalidProperties[] = "'program_rules' can't be null";
        }
        if ($this->container['rental_assistance'] === null) {
            $invalidProperties[] = "'rental_assistance' can't be null";
        }
        if ($this->container['rental_history'] === null) {
            $invalidProperties[] = "'rental_history' can't be null";
        }
        if ($this->container['required_documents'] === null) {
            $invalidProperties[] = "'required_documents' can't be null";
        }
        if ($this->container['waitlist_current_size'] === null) {
            $invalidProperties[] = "'waitlist_current_size' can't be null";
        }
        if ($this->container['waitlist_max_size'] === null) {
            $invalidProperties[] = "'waitlist_max_size' can't be null";
        }
        if ($this->container['what_to_expect'] === null) {
            $invalidProperties[] = "'what_to_expect' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets status
     *
     * @return \Swagger\Client\Model\ListingStatus
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \Swagger\Client\Model\ListingStatus $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets display_waitlist_size
     *
     * @return bool
     */
    public function getDisplayWaitlistSize()
    {
        return $this->container['display_waitlist_size'];
    }

    /**
     * Sets display_waitlist_size
     *
     * @param bool $display_waitlist_size display_waitlist_size
     *
     * @return $this
     */
    public function setDisplayWaitlistSize($display_waitlist_size)
    {
        $this->container['display_waitlist_size'] = $display_waitlist_size;

        return $this;
    }

    /**
     * Gets csv_formatting_type
     *
     * @return \Swagger\Client\Model\CSVFormattingType
     */
    public function getCsvFormattingType()
    {
        return $this->container['csv_formatting_type'];
    }

    /**
     * Sets csv_formatting_type
     *
     * @param \Swagger\Client\Model\CSVFormattingType $csv_formatting_type csv_formatting_type
     *
     * @return $this
     */
    public function setCsvFormattingType($csv_formatting_type)
    {
        $this->container['csv_formatting_type'] = $csv_formatting_type;

        return $this;
    }

    /**
     * Gets county_code
     *
     * @return \Swagger\Client\Model\CountyCode
     */
    public function getCountyCode()
    {
        return $this->container['county_code'];
    }

    /**
     * Sets county_code
     *
     * @param \Swagger\Client\Model\CountyCode $county_code county_code
     *
     * @return $this
     */
    public function setCountyCode($county_code)
    {
        $this->container['county_code'] = $county_code;

        return $this;
    }

    /**
     * Gets preferences
     *
     * @return \Swagger\Client\Model\PreferenceCreateDto[]
     */
    public function getPreferences()
    {
        return $this->container['preferences'];
    }

    /**
     * Sets preferences
     *
     * @param \Swagger\Client\Model\PreferenceCreateDto[] $preferences preferences
     *
     * @return $this
     */
    public function setPreferences($preferences)
    {
        $this->container['preferences'] = $preferences;

        return $this;
    }

    /**
     * Gets property
     *
     * @return \Swagger\Client\Model\IdDto
     */
    public function getProperty()
    {
        return $this->container['property'];
    }

    /**
     * Sets property
     *
     * @param \Swagger\Client\Model\IdDto $property property
     *
     * @return $this
     */
    public function setProperty($property)
    {
        $this->container['property'] = $property;

        return $this;
    }

    /**
     * Gets application_address
     *
     * @return AllOfListingCreateDtoApplicationAddress
     */
    public function getApplicationAddress()
    {
        return $this->container['application_address'];
    }

    /**
     * Sets application_address
     *
     * @param AllOfListingCreateDtoApplicationAddress $application_address application_address
     *
     * @return $this
     */
    public function setApplicationAddress($application_address)
    {
        $this->container['application_address'] = $application_address;

        return $this;
    }

    /**
     * Gets application_pick_up_address
     *
     * @return AllOfListingCreateDtoApplicationPickUpAddress
     */
    public function getApplicationPickUpAddress()
    {
        return $this->container['application_pick_up_address'];
    }

    /**
     * Sets application_pick_up_address
     *
     * @param AllOfListingCreateDtoApplicationPickUpAddress $application_pick_up_address application_pick_up_address
     *
     * @return $this
     */
    public function setApplicationPickUpAddress($application_pick_up_address)
    {
        $this->container['application_pick_up_address'] = $application_pick_up_address;

        return $this;
    }

    /**
     * Gets leasing_agent_address
     *
     * @return AllOfListingCreateDtoLeasingAgentAddress
     */
    public function getLeasingAgentAddress()
    {
        return $this->container['leasing_agent_address'];
    }

    /**
     * Sets leasing_agent_address
     *
     * @param AllOfListingCreateDtoLeasingAgentAddress $leasing_agent_address leasing_agent_address
     *
     * @return $this
     */
    public function setLeasingAgentAddress($leasing_agent_address)
    {
        $this->container['leasing_agent_address'] = $leasing_agent_address;

        return $this;
    }

    /**
     * Gets leasing_agents
     *
     * @return \Swagger\Client\Model\IdDto[]
     */
    public function getLeasingAgents()
    {
        return $this->container['leasing_agents'];
    }

    /**
     * Sets leasing_agents
     *
     * @param \Swagger\Client\Model\IdDto[] $leasing_agents leasing_agents
     *
     * @return $this
     */
    public function setLeasingAgents($leasing_agents)
    {
        $this->container['leasing_agents'] = $leasing_agents;

        return $this;
    }

    /**
     * Gets application_methods
     *
     * @return \Swagger\Client\Model\ApplicationMethodDto[]
     */
    public function getApplicationMethods()
    {
        return $this->container['application_methods'];
    }

    /**
     * Sets application_methods
     *
     * @param \Swagger\Client\Model\ApplicationMethodDto[] $application_methods application_methods
     *
     * @return $this
     */
    public function setApplicationMethods($application_methods)
    {
        $this->container['application_methods'] = $application_methods;

        return $this;
    }

    /**
     * Gets assets
     *
     * @return \Swagger\Client\Model\AssetDto[]
     */
    public function getAssets()
    {
        return $this->container['assets'];
    }

    /**
     * Sets assets
     *
     * @param \Swagger\Client\Model\AssetDto[] $assets assets
     *
     * @return $this
     */
    public function setAssets($assets)
    {
        $this->container['assets'] = $assets;

        return $this;
    }

    /**
     * Gets events
     *
     * @return \Swagger\Client\Model\ListingEventDto[]
     */
    public function getEvents()
    {
        return $this->container['events'];
    }

    /**
     * Sets events
     *
     * @param \Swagger\Client\Model\ListingEventDto[] $events events
     *
     * @return $this
     */
    public function setEvents($events)
    {
        $this->container['events'] = $events;

        return $this;
    }

    /**
     * Gets application_due_date
     *
     * @return \DateTime
     */
    public function getApplicationDueDate()
    {
        return $this->container['application_due_date'];
    }

    /**
     * Sets application_due_date
     *
     * @param \DateTime $application_due_date application_due_date
     *
     * @return $this
     */
    public function setApplicationDueDate($application_due_date)
    {
        $this->container['application_due_date'] = $application_due_date;

        return $this;
    }

    /**
     * Gets application_open_date
     *
     * @return \DateTime
     */
    public function getApplicationOpenDate()
    {
        return $this->container['application_open_date'];
    }

    /**
     * Sets application_open_date
     *
     * @param \DateTime $application_open_date application_open_date
     *
     * @return $this
     */
    public function setApplicationOpenDate($application_open_date)
    {
        $this->container['application_open_date'] = $application_open_date;

        return $this;
    }

    /**
     * Gets application_fee
     *
     * @return string
     */
    public function getApplicationFee()
    {
        return $this->container['application_fee'];
    }

    /**
     * Sets application_fee
     *
     * @param string $application_fee application_fee
     *
     * @return $this
     */
    public function setApplicationFee($application_fee)
    {
        $this->container['application_fee'] = $application_fee;

        return $this;
    }

    /**
     * Gets application_organization
     *
     * @return string
     */
    public function getApplicationOrganization()
    {
        return $this->container['application_organization'];
    }

    /**
     * Sets application_organization
     *
     * @param string $application_organization application_organization
     *
     * @return $this
     */
    public function setApplicationOrganization($application_organization)
    {
        $this->container['application_organization'] = $application_organization;

        return $this;
    }

    /**
     * Gets application_pick_up_address_office_hours
     *
     * @return string
     */
    public function getApplicationPickUpAddressOfficeHours()
    {
        return $this->container['application_pick_up_address_office_hours'];
    }

    /**
     * Sets application_pick_up_address_office_hours
     *
     * @param string $application_pick_up_address_office_hours application_pick_up_address_office_hours
     *
     * @return $this
     */
    public function setApplicationPickUpAddressOfficeHours($application_pick_up_address_office_hours)
    {
        $this->container['application_pick_up_address_office_hours'] = $application_pick_up_address_office_hours;

        return $this;
    }

    /**
     * Gets building_selection_criteria
     *
     * @return string
     */
    public function getBuildingSelectionCriteria()
    {
        return $this->container['building_selection_criteria'];
    }

    /**
     * Sets building_selection_criteria
     *
     * @param string $building_selection_criteria building_selection_criteria
     *
     * @return $this
     */
    public function setBuildingSelectionCriteria($building_selection_criteria)
    {
        $this->container['building_selection_criteria'] = $building_selection_criteria;

        return $this;
    }

    /**
     * Gets costs_not_included
     *
     * @return string
     */
    public function getCostsNotIncluded()
    {
        return $this->container['costs_not_included'];
    }

    /**
     * Sets costs_not_included
     *
     * @param string $costs_not_included costs_not_included
     *
     * @return $this
     */
    public function setCostsNotIncluded($costs_not_included)
    {
        $this->container['costs_not_included'] = $costs_not_included;

        return $this;
    }

    /**
     * Gets credit_history
     *
     * @return string
     */
    public function getCreditHistory()
    {
        return $this->container['credit_history'];
    }

    /**
     * Sets credit_history
     *
     * @param string $credit_history credit_history
     *
     * @return $this
     */
    public function setCreditHistory($credit_history)
    {
        $this->container['credit_history'] = $credit_history;

        return $this;
    }

    /**
     * Gets criminal_background
     *
     * @return string
     */
    public function getCriminalBackground()
    {
        return $this->container['criminal_background'];
    }

    /**
     * Sets criminal_background
     *
     * @param string $criminal_background criminal_background
     *
     * @return $this
     */
    public function setCriminalBackground($criminal_background)
    {
        $this->container['criminal_background'] = $criminal_background;

        return $this;
    }

    /**
     * Gets deposit_min
     *
     * @return string
     */
    public function getDepositMin()
    {
        return $this->container['deposit_min'];
    }

    /**
     * Sets deposit_min
     *
     * @param string $deposit_min deposit_min
     *
     * @return $this
     */
    public function setDepositMin($deposit_min)
    {
        $this->container['deposit_min'] = $deposit_min;

        return $this;
    }

    /**
     * Gets deposit_max
     *
     * @return string
     */
    public function getDepositMax()
    {
        return $this->container['deposit_max'];
    }

    /**
     * Sets deposit_max
     *
     * @param string $deposit_max deposit_max
     *
     * @return $this
     */
    public function setDepositMax($deposit_max)
    {
        $this->container['deposit_max'] = $deposit_max;

        return $this;
    }

    /**
     * Gets disable_units_accordion
     *
     * @return bool
     */
    public function getDisableUnitsAccordion()
    {
        return $this->container['disable_units_accordion'];
    }

    /**
     * Sets disable_units_accordion
     *
     * @param bool $disable_units_accordion disable_units_accordion
     *
     * @return $this
     */
    public function setDisableUnitsAccordion($disable_units_accordion)
    {
        $this->container['disable_units_accordion'] = $disable_units_accordion;

        return $this;
    }

    /**
     * Gets leasing_agent_email
     *
     * @return string
     */
    public function getLeasingAgentEmail()
    {
        return $this->container['leasing_agent_email'];
    }

    /**
     * Sets leasing_agent_email
     *
     * @param string $leasing_agent_email leasing_agent_email
     *
     * @return $this
     */
    public function setLeasingAgentEmail($leasing_agent_email)
    {
        $this->container['leasing_agent_email'] = $leasing_agent_email;

        return $this;
    }

    /**
     * Gets leasing_agent_name
     *
     * @return string
     */
    public function getLeasingAgentName()
    {
        return $this->container['leasing_agent_name'];
    }

    /**
     * Sets leasing_agent_name
     *
     * @param string $leasing_agent_name leasing_agent_name
     *
     * @return $this
     */
    public function setLeasingAgentName($leasing_agent_name)
    {
        $this->container['leasing_agent_name'] = $leasing_agent_name;

        return $this;
    }

    /**
     * Gets leasing_agent_office_hours
     *
     * @return string
     */
    public function getLeasingAgentOfficeHours()
    {
        return $this->container['leasing_agent_office_hours'];
    }

    /**
     * Sets leasing_agent_office_hours
     *
     * @param string $leasing_agent_office_hours leasing_agent_office_hours
     *
     * @return $this
     */
    public function setLeasingAgentOfficeHours($leasing_agent_office_hours)
    {
        $this->container['leasing_agent_office_hours'] = $leasing_agent_office_hours;

        return $this;
    }

    /**
     * Gets leasing_agent_phone
     *
     * @return string
     */
    public function getLeasingAgentPhone()
    {
        return $this->container['leasing_agent_phone'];
    }

    /**
     * Sets leasing_agent_phone
     *
     * @param string $leasing_agent_phone leasing_agent_phone
     *
     * @return $this
     */
    public function setLeasingAgentPhone($leasing_agent_phone)
    {
        $this->container['leasing_agent_phone'] = $leasing_agent_phone;

        return $this;
    }

    /**
     * Gets leasing_agent_title
     *
     * @return string
     */
    public function getLeasingAgentTitle()
    {
        return $this->container['leasing_agent_title'];
    }

    /**
     * Sets leasing_agent_title
     *
     * @param string $leasing_agent_title leasing_agent_title
     *
     * @return $this
     */
    public function setLeasingAgentTitle($leasing_agent_title)
    {
        $this->container['leasing_agent_title'] = $leasing_agent_title;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets postmarked_applications_received_by_date
     *
     * @return \DateTime
     */
    public function getPostmarkedApplicationsReceivedByDate()
    {
        return $this->container['postmarked_applications_received_by_date'];
    }

    /**
     * Sets postmarked_applications_received_by_date
     *
     * @param \DateTime $postmarked_applications_received_by_date postmarked_applications_received_by_date
     *
     * @return $this
     */
    public function setPostmarkedApplicationsReceivedByDate($postmarked_applications_received_by_date)
    {
        $this->container['postmarked_applications_received_by_date'] = $postmarked_applications_received_by_date;

        return $this;
    }

    /**
     * Gets program_rules
     *
     * @return string
     */
    public function getProgramRules()
    {
        return $this->container['program_rules'];
    }

    /**
     * Sets program_rules
     *
     * @param string $program_rules program_rules
     *
     * @return $this
     */
    public function setProgramRules($program_rules)
    {
        $this->container['program_rules'] = $program_rules;

        return $this;
    }

    /**
     * Gets rental_assistance
     *
     * @return string
     */
    public function getRentalAssistance()
    {
        return $this->container['rental_assistance'];
    }

    /**
     * Sets rental_assistance
     *
     * @param string $rental_assistance rental_assistance
     *
     * @return $this
     */
    public function setRentalAssistance($rental_assistance)
    {
        $this->container['rental_assistance'] = $rental_assistance;

        return $this;
    }

    /**
     * Gets rental_history
     *
     * @return string
     */
    public function getRentalHistory()
    {
        return $this->container['rental_history'];
    }

    /**
     * Sets rental_history
     *
     * @param string $rental_history rental_history
     *
     * @return $this
     */
    public function setRentalHistory($rental_history)
    {
        $this->container['rental_history'] = $rental_history;

        return $this;
    }

    /**
     * Gets required_documents
     *
     * @return string
     */
    public function getRequiredDocuments()
    {
        return $this->container['required_documents'];
    }

    /**
     * Sets required_documents
     *
     * @param string $required_documents required_documents
     *
     * @return $this
     */
    public function setRequiredDocuments($required_documents)
    {
        $this->container['required_documents'] = $required_documents;

        return $this;
    }

    /**
     * Gets special_notes
     *
     * @return string
     */
    public function getSpecialNotes()
    {
        return $this->container['special_notes'];
    }

    /**
     * Sets special_notes
     *
     * @param string $special_notes special_notes
     *
     * @return $this
     */
    public function setSpecialNotes($special_notes)
    {
        $this->container['special_notes'] = $special_notes;

        return $this;
    }

    /**
     * Gets waitlist_current_size
     *
     * @return float
     */
    public function getWaitlistCurrentSize()
    {
        return $this->container['waitlist_current_size'];
    }

    /**
     * Sets waitlist_current_size
     *
     * @param float $waitlist_current_size waitlist_current_size
     *
     * @return $this
     */
    public function setWaitlistCurrentSize($waitlist_current_size)
    {
        $this->container['waitlist_current_size'] = $waitlist_current_size;

        return $this;
    }

    /**
     * Gets waitlist_max_size
     *
     * @return float
     */
    public function getWaitlistMaxSize()
    {
        return $this->container['waitlist_max_size'];
    }

    /**
     * Sets waitlist_max_size
     *
     * @param float $waitlist_max_size waitlist_max_size
     *
     * @return $this
     */
    public function setWaitlistMaxSize($waitlist_max_size)
    {
        $this->container['waitlist_max_size'] = $waitlist_max_size;

        return $this;
    }

    /**
     * Gets what_to_expect
     *
     * @return AllOfListingCreateDtoWhatToExpect
     */
    public function getWhatToExpect()
    {
        return $this->container['what_to_expect'];
    }

    /**
     * Sets what_to_expect
     *
     * @param AllOfListingCreateDtoWhatToExpect $what_to_expect what_to_expect
     *
     * @return $this
     */
    public function setWhatToExpect($what_to_expect)
    {
        $this->container['what_to_expect'] = $what_to_expect;

        return $this;
    }

    /**
     * Gets application_config
     *
     * @return object
     */
    public function getApplicationConfig()
    {
        return $this->container['application_config'];
    }

    /**
     * Sets application_config
     *
     * @param object $application_config application_config
     *
     * @return $this
     */
    public function setApplicationConfig($application_config)
    {
        $this->container['application_config'] = $application_config;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
